1)
#include<stdio.h>
#include<stdlib.h>

int main(void) {
  printf("     __\n");
  printf("(___()'`;\n");
  printf("/,    /`\n");
  printf("\\\"--\\\\\n");
  return EXIT_SUCCESS;
}

2)
#include <stdio.h>
#include <stdlib.h>
 
int main(void) {
  short int a = 7;
  char b = 77;
  float c = 777;
  long int d = 7777;
 
  printf("%03hd\n", a);
  printf("%c\n", b);
  printf("%.0f\n", c);
  printf("%lx\n", d);
  return EXIT_SUCCESS;
}

3)
#include <stdio.h>
#include <stdlib.h>
 
int main(void) {
  int i, lancer_des_1, lancer_des_2; 
  printf("entrer le premier dé : ");
  scanf("%d", &lancer_des_1);
  printf("entrer le second dé : ");
  scanf("%d", &lancer_des_2);
  if (lancer_des_1 == lancer_des_2) {
    if (lancer_des_1 == 1) {
      printf("Snakes eyes \n");
    } else if (lancer_des_2 == 6) {
      printf("boxcars\n");
    } else {
      printf("hard ways\n");
    }
  }
  return EXIT_SUCCESS;
}


4)
#include <stdio.h>
#include <stdlib.h>

int main(void) {
    int de1, de2;
    int total = 0;
    int max;
    int combinaisons = 0;
    double moyenne;  /* Déclaration de la variable au début du bloc */

    /* Simuler toutes les combinaisons possibles de deux dés à 20 faces */
    for (de1 = 1; de1 <= 20; de1++) {
        for (de2 = 1; de2 <= 20; de2++) {
            /* Retenir le meilleur résultat entre les deux dés */
            max = (de1 > de2) ? de1 : de2;
            total += max;
            combinaisons++;
        }
    }

    /* Calcul de la moyenne */
    moyenne = (double)total / combinaisons;

    /* Affichage du résultat */
    printf("La moyenne des meilleurs résultats retenus est : %.2f\n", moyenne);

    return EXIT_SUCCESS;
}

5)
#include <stdio.h>
#include <stdlib.h>

/* Déclaration de la taille de la grille */
#define TAILLE 10

/* Constantes pour indiquer l'état des cases */
#define VIDE 0
#define BATEAU 1
#define TOUCHE 2

/* Déclaration des fonctions */
void initialiser_grille(int grille[TAILLE][TAILLE]);
int verifier_tir(int grille[TAILLE][TAILLE], int x, int y);
int flotte_coulee(int grille[TAILLE][TAILLE]);

int main(void) {
    int grille[TAILLE][TAILLE];
    int x, y;
    int coups = 0;

    /* Initialiser la grille avec les positions fixes des navires */
    initialiser_grille(grille);

    /* Boucle principale du jeu */
    while (!flotte_coulee(grille)) {
        /* Demander les coordonnées de l'utilisateur */
        printf("Coordonnées ? ");
        scanf("%d %d", &x, &y);

        /* Vérifier si les coordonnées sont valides */
        if (x < 1 || x > 10 || y < 1 || y > 10) {
            printf("Coordonnées invalides. Entrez des valeurs entre 1 et 10.\n");
            continue;
        }

        /* Vérifier le résultat du tir */
        if (verifier_tir(grille, x - 1, y - 1)) {
            printf("Touché\n");
        } else {
            printf("Dans l'eau\n");
        }

        coups++;
    }

    /* Afficher le nombre de coups utilisés */
    printf("Partie terminée en %d coups\n", coups);

    return EXIT_SUCCESS;
}

/* Initialisation de la grille avec les navires */
void initialiser_grille(int grille[TAILLE][TAILLE]) {
    /* Déclarer les variables en dehors des boucles */
    int i, j;

    /* Remplir la grille de cases vides */
    for (i = 0; i < TAILLE; i++) {
        for (j = 0; j < TAILLE; j++) {
            grille[i][j] = VIDE;
        }
    }

    /* Placer les navires sur la grille (1 = navire, 0 = vide) */
    /* Porte-avion (5 cases) */
    grille[0][0] = BATEAU;
    grille[0][1] = BATEAU;
    grille[0][2] = BATEAU;
    grille[0][3] = BATEAU;
    grille[0][4] = BATEAU;

    /* Croiseur (4 cases) */
    grille[2][2] = BATEAU;
    grille[2][3] = BATEAU;
    grille[2][4] = BATEAU;
    grille[2][5] = BATEAU;

    /* Contre-torpilleurs (3 cases chacun) */
    grille[4][4] = BATEAU;
    grille[4][5] = BATEAU;
    grille[4][6] = BATEAU;

    grille[6][1] = BATEAU;
    grille[6][2] = BATEAU;
    grille[6][3] = BATEAU;

    /* Torpilleur (2 cases) */
    grille[8][8] = BATEAU;
    grille[8][9] = BATEAU;
}

/* Vérifier le tir à la position (x, y) */
int verifier_tir(int grille[TAILLE][TAILLE], int x, int y) {
    if (grille[x][y] == BATEAU) {
        grille[x][y] = TOUCHE;  /* Marquer comme touché */
        return 1;
    }
    return 0;
}

/* Vérifier si toute la flotte est coulée */
int flotte_coulee(int grille[TAILLE][TAILLE]) {
    int i, j;

    for (i = 0; i < TAILLE; i++) {
        for (j = 0; j < TAILLE; j++) {
            if (grille[i][j] == BATEAU) {
                return 0;  /* Si un navire n'est pas encore touché, la flotte n'est pas coulée */
            }
        }
    }
#include <stdio.h>
#include <stdlib.h>

int main(void) {
    int de1, de2;
    int total = 0;
    int max;
    int combinaisons = 0;
    double moyenne;  /* Déclaration de la variable au début du bloc */

    /* Simuler toutes les combinaisons possibles de deux dés à 20 faces */
    for (de1 = 1; de1 <= 20; de1++) {
        for (de2 = 1; de2 <= 20; de2++) {
            /* Retenir le meilleur résultat entre les deux dés */
            max = (de1 > de2) ? de1 : de2;
            total += max;
            combinaisons++;
        }
    }

    /* Calcul de la moyenne */
    moyenne = (double)total / combinaisons;

    /* Affichage du résultat */
    printf("La moyenne des meilleurs résultats retenus est : %.2f\n", moyenne);

    return EXIT_SUCCESS;
}    return 1;  /* Toute la flotte est coulée */
}
